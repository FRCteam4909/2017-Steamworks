// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4909.STEAMWORKS.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4909.STEAMWORKS.Robot;
import org.usfirst.frc4909.STEAMWORKS.RobotMap;

/**
 *
 */
public class BoilerShot extends Command {
    public BoilerShot() {
    	//Change this to set target velocity for the shooter, in rpms
    
        requires(Robot.shooter);
    }
    
    // Called just before this Command runs the first time
    protected void initialize() {
    	SmartDashboard.putNumber("Target Velocity",2900.0);
    	SmartDashboard.putBoolean("IsReadyToShoot", false);
		Robot.shooter.shooterPID.resetPID();
		//Robot.shooter.setShooterState(true);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
		Robot.shooter.setRPM(SmartDashboard.getNumber("Target Velocity", 2900.0));
    	//Robot.shooter.setSpeed(1);
		SmartDashboard.putBoolean("PID Stuffs", true);
		SmartDashboard.putNumber("currentSpeed", Robot.shooter.getRPM());
		if(Robot.shooter.getRPM() >= SmartDashboard.getNumber("Target Velocity",2900.0)*0.9){
			SmartDashboard.putBoolean("Ready To Shoot", true);
		}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	return false;
    }

    // Called once after isFinished returns true
    protected void end() {
		Robot.shooter.shooterPID.resetPID();
		Robot.shooter.setRPM(0);
		
		//Robot.shooter.setShooterState(false);
		SmartDashboard.putBoolean("IsReadyToShoot", false);

    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
